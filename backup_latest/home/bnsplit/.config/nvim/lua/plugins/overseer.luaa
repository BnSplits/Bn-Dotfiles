return {
  "stevearc/overseer.nvim",
  cmd = {
    "OverseerOpen",
    "OverseerClose",
    "OverseerToggle",
    "OverseerSaveBundle",
    "OverseerLoadBundle",
    "OverseerDeleteBundle",
    "OverseerRunCmd",
    "OverseerRun",
    "OverseerInfo",
    "OverseerBuild",
    "OverseerQuickAction",
    "OverseerTaskAction",
    "OverseerClearCache",
  },
  opts = {
    dap = false,
    task_list = {
      bindings = {
        ["<C-h>"] = false,
        ["<C-j>"] = false,
        ["<C-k>"] = false,
        ["<C-l>"] = false,
      },
    },
    form = {
      win_opts = {
        winblend = 0,
      },
    },
    confirm = {
      win_opts = {
        winblend = 0,
      },
    },
    task_win = {
      win_opts = {
        winblend = 0,
      },
    },
  },
  -- stylua: ignore
  keys = {
    { "<leader>ow", "<cmd>OverseerToggle<cr>",      desc = "Task list" },
    { "<leader>oo", "<cmd>OverseerRun<cr>",         desc = "Run task" },
    { "<leader>oq", "<cmd>OverseerQuickAction<cr>", desc = "Action recent task" },
    { "<leader>oi", "<cmd>OverseerInfo<cr>",        desc = "Overseer Info" },
    { "<leader>ob", "<cmd>OverseerBuild<cr>",       desc = "Task builder" },
    { "<leader>ot", "<cmd>OverseerTaskAction<cr>",  desc = "Task action" },
    { "<leader>oc", "<cmd>OverseerClearCache<cr>",  desc = "Clear cache" },
    { "<leader>oz", "<cmd>RunFiletypeTask<cr>",     desc = "Exécuter selon le type de fichier" },
  },
  templates = {
    {
      name = "Compile and Run C",
      builder = function()
        local file = vim.fn.expand("%:t")
        local output = vim.fn.expand("%:r")
        return {
          cmd = "sh",
          args = { "-c", "gcc "..file.." -o "..output.." && ./"..output },
          components = {
            "default",
            { "on_complete_notify", message = "Exécution C terminée" },
          },
        }
      end,
      condition = { filetype = "c" }
    },
    {
      name = "Run Python",
      builder = function()
        return {
          cmd = { "python3", vim.fn.expand("%") },
          components = {
            "default",
            { "on_complete_notify", message = "Exécution Python terminée" },
          },
        }
      end,
      condition = { filetype = "python" }
    },
    {
      name = "Run JavaScript",
      builder = function()
        return {
          cmd = { "node", vim.fn.expand("%") },
          components = {
            "default",
            { "on_complete_notify", message = "Exécution JS terminée" },
          },
        }
      end,
      condition = { filetype = "javascript" }
    },
    {
      name = "Compile and Run Pascal",
      builder = function()
        local file = vim.fn.expand("%:r")
        return {
          cmd = "sh",
          args = { "-c", "fpc "..vim.fn.expand("%").." && ./"..file },
          components = {
            "default",
            { "on_complete_notify", message = "Exécution Pascal terminée" },
          },
        }
      end,
      condition = { filetype = "pascal" }
    }
  },
  config = function(_, opts)
    require('overseer').setup(opts)
    
    -- Création d'une commande pour exécuter automatiquement la tâche appropriée
    vim.api.nvim_create_user_command('RunFiletypeTask', function()
      local ft = vim.bo.filetype
      local templates = require('overseer.template').list()
      
      for _, template in ipairs(templates) do
        if template.condition and template.condition.filetype == ft then
          require('overseer').run_action(template.name)
          return
        end
      end
      vim.notify("Aucune configuration trouvée pour "..ft, vim.log.levels.WARN)
    end, {})
  end,
}
