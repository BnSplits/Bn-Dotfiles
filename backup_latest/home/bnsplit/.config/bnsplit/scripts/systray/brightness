#!/usr/bin/env python3
import gi

gi.require_version("Gtk", "3.0")
gi.require_version("AppIndicator3", "0.1")

from gi.repository import Gtk, AppIndicator3, GLib
import signal
import subprocess


class BrightnessTray:
    def __init__(self):
        self.app = "brightness_tray"
        self.indicator = AppIndicator3.Indicator.new(
            self.app,
            "display-brightness-symbolic",
            AppIndicator3.IndicatorCategory.APPLICATION_STATUS,
        )
        self.indicator.set_status(AppIndicator3.IndicatorStatus.ACTIVE)

        # Create menu with dummy item
        self.menu = Gtk.Menu()
        self.menu_item = Gtk.MenuItem(label="Brightness Level")
        self.menu.append(self.menu_item)
        self.menu.show_all()

        self.indicator.set_menu(self.menu)
        self.menu.connect("button-press-event", self.on_icon_click)

        self.update_icon()
        GLib.timeout_add_seconds(1, self.update_icon)

    def get_brightness(self):
        try:
            output = subprocess.check_output(
                "brightnessctl | grep -oP '\\d+(?=%)'", shell=True, text=True
            ).strip()
            return int(output)
        except Exception:
            return 0

    def get_icon_name(self):
        brightness = self.get_brightness()
        if brightness < 1:
            return "display-brightness-off-symbolic"
        if brightness < 33:
            return "display-brightness-low-symbolic"
        return (
            "display-brightness-high-symbolic"
            if brightness > 66
            else "display-brightness-medium-symbolic"
        )

    def update_icon(self):
        brightness = self.get_brightness()
        self.indicator.set_icon_full(self.get_icon_name(), "")
        self.menu_item.set_label(f"Brightness: {brightness}%")
        return True

    # INFO: Dont work
    def on_icon_click(self, widget, event):
        if event.button == 1:  # Left click
            subprocess.Popen(["brightnessctl", "set", "10%+"])
        elif event.button == 3:  # Right click
            return False  # Allow default menu behavior
        return True


if __name__ == "__main__":
    Gtk.init([])
    BrightnessTray()
    signal.signal(signal.SIGINT, signal.SIG_DFL)
    Gtk.main()
