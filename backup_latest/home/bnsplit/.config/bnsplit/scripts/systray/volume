#!/usr/bin/env python3
import gi

gi.require_version("Gtk", "3.0")
gi.require_version("AppIndicator3", "0.1")

from gi.repository import Gtk, AppIndicator3, GLib
import signal
import subprocess


class VolumeTray:
    def __init__(self):
        self.app = "volume_tray"
        self.indicator = AppIndicator3.Indicator.new(
            self.app,
            "audio-volume-medium-symbolic",
            AppIndicator3.IndicatorCategory.APPLICATION_STATUS,
        )
        self.indicator.set_status(AppIndicator3.IndicatorStatus.ACTIVE)

        # Menu setup
        self.menu = Gtk.Menu()
        self.menu_item = Gtk.MenuItem(label="Volume Level")
        self.menu.append(self.menu_item)
        self.menu.show_all()

        # Connect click events
        self.menu.connect("button-press-event", self.on_icon_click)
        self.indicator.set_menu(self.menu)

        self.update_icon()
        GLib.timeout_add_seconds(1, self.update_icon)

    def get_volume(self):
        try:
            output = subprocess.check_output(
                "wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $2 * 100}'",
                shell=True,
                text=True,
            ).strip()
            return int(float(output))
        except Exception:
            return 0

    def is_muted(self):
        try:
            status = subprocess.check_output(
                "wpctl get-volume @DEFAULT_AUDIO_SINK@ | grep -o MUTED",
                shell=True,
                text=True,
            ).strip()
            return bool(status)
        except subprocess.CalledProcessError:
            return False

    def get_icon_name(self):
        if self.is_muted():
            return "audio-volume-muted-symbolic"

        vol = self.get_volume()
        if vol == 0:
            return "audio-volume-muted-symbolic"
        elif vol < 33:
            return "audio-volume-low-symbolic"
        elif vol < 66:
            return "audio-volume-medium-symbolic"
        elif vol > 100:
            return "audio-volume-overamplified-symbolic"
        return "audio-volume-high-symbolic"

    def update_icon(self):
        vol = self.get_volume()
        icon_name = self.get_icon_name()
        self.menu_item.set_label(f"Volume: {vol}%")
        self.indicator.set_icon_full(icon_name, "")
        return True

    # INFO: Dont work
    def on_icon_click(self, widget, event):
        if event.button == 1:  # Left click
            subprocess.Popen(["wpctl", "set-mute", "@DEFAULT_AUDIO_SINK@", "toggle"])
            return True
        elif event.button == 3:  # Right click
            subprocess.Popen(["pavucontrol"])
            return True
        return False


if __name__ == "__main__":
    Gtk.init([])
    VolumeTray()
    signal.signal(signal.SIGINT, signal.SIG_DFL)
    Gtk.main()
